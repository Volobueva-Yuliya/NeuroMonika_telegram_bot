import os
import logging
import urllib
import pandas as pd

from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.markdown import link
from start_text import *
from functions import *
# from keyboards import *
# import keyboards as kb

# Make sure that u got telegram api token from @BotFather
load_dotenv() #–∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —Å —Ç–æ–∫–µ–Ω–æ–º
TOKEN = os.getenv('TELEGRAM_TOKEN') #–ø–æ–¥–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞


# Configure logging
#–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ–±—Ä–∞—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
logging.basicConfig(level=logging.INFO)


# Initialize bot and dispatcher
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


# –∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–ª–æ–≤–∞—Ç—å —Ä—É—Å–∫–∏—Ö —Å–ª–æ–≤ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
dict = pd.read_csv('/NeuroMonika/dicts/rus_dict_50.csv', sep=';')
dict_fonems = pd.DataFrame(pd.read_csv('/NeuroMonika/dicts/fonem_parsing.csv', sep=','))
dict_fonems.mnemonic_list = dict_fonems.mnemonic_list.apply(lambda x : x[1:-1])
dict_fonems.mnemonic_list = dict_fonems.mnemonic_list.str.replace("'", "").str.split(', ')

# Base command messages for start and exceptions (not target content inputs)
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    user_name = message.from_user.first_name #—Å–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    user_id = message.from_user.id #—Å–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    text = HELLO_TEXT %user_name
    logging.info(f'first start from user_name = {user_name}, user_id = {user_id}')
    await message.reply(text)


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø—É "text"
@dp.message_handler(content_types=['text'])
async def get_word_from_user(message: types.Message):
    user_id = message.from_user.id
    if message.text == 'FAQ':
        descrption = DESCRIPTION
        await message.reply(descrption)
        await bot.send_message(message.from_user.id, '–ù–∞–¥–µ—é—Å—å, —Ç–∞–∫ —Å—Ç–∞–ª–æ –ø–æ–Ω—è—Ç–Ω–µ–µ. –í–≤–µ–¥–∏ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å!')

    elif message.text == '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞':
        user_name = message.from_user.first_name  # —Å–±–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        text = HELLO_TEXT % user_name
        await bot.send_message(message.from_user.id, text)

    else:
        chat_id = message.chat.id
        user_name = message.from_user.first_name
        user_id = message.from_user.id
        message_id = message.message_id

        text = WAITING_TEXT

        await bot.send_message(chat_id, text)
        p = open("/Users/antonzagorelskii/Desktop/Elbrus/Projects/Google API/image/Monika.gif", 'rb')
        await bot.send_animation(chat_id, p)

        input_text = message.text
        logging.info(f'{user_name, user_id} send this text:{input_text}')
        output = list(translait(input_text))
        output_ru = output[0]
        output_en = output[1]
        output_ruen = output[2]
        output_monika_dict = get_rus_word(output_en, output_ruen)[0]
        output_monika_parsing = get_rus_word(output_en, output_ruen)[1]
        output_photo_mem = get_mem(output_monika_dict, input_text)
        output_respell = respell(output_en)

        if not output_monika_parsing == '–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏–¥—É–º–∞–ª':
            output_text = f'{output_ru}?'\
                          f'\nüßê–ü–µ—Ä–µ–≤–æ–¥ "{output_en}"' \
                          f'\nü§™–†—É–Ω–≥–ª–∏—à "{output_ruen}"'\
                          f'\nüïµÔ∏è‚Äç‚ôÄÔ∏è–ê—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω–æ–µ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ => "{output_monika_parsing}".' \
                          f'\nüßô‚Äç‚ôÄÔ∏è"{output_ruen}" —Å–æ–∑–≤—É—á–Ω–æ —Å "{output_monika_dict}".' \
                          f'\nü§Ø–§–æ—Ç–æ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è =>'
        else:
            output_text = f'{output_ru}?'\
                          f'\nüßê–ü–µ—Ä–µ–≤–æ–¥ "{output_en}".' \
                          f'\nü§™–†—É–Ω–≥–ª–∏—à—å "{output_ruen}"'\
                          f'\nüßô‚Äç‚ôÄÔ∏è"{output_ruen}" —Å–æ–∑–≤—É—á–Ω–æ —Å "{output_monika_dict}".' \
                          f'\nü§Ø–§–æ—Ç–æ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è =>'

        output_ru = ''
        output_en = ''
        output_respell = ''
        output_ruen = ''
        output_monika_parsing = ''
        output_monika_dict = ''

        await bot.send_message(chat_id, text=output_text)
        if output_photo_mem == '–§–æ—Ç–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å':
            await bot.send_message(chat_id, text="–ù–µ –Ω–∞—à–ª–∞")
        else:
            await bot.send_photo(message.chat.id, output_photo_mem)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
